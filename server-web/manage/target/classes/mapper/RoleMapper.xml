<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mot.mapper.RoleMapper">



    <select id="queryRole" parameterType="com.mot.model.ParamRoleModel" resultType="com.mot.entity.RoleEntity">
      select * from sy_role where delflag = '1'
        <if test="model.roleCode != null ">
            and role_code like #{model.roleCode}
        </if>
        <if test="model.roleName != null ">
            and role_name like #{model.roleName}
        </if>
        <if test="model.startTime != null ">
            and create_time >= #{model.startTime}
        </if>
        <if test="model.endTime != null ">
            and #{model.endTime} >= create_time
        </if>
        limit ${model.page},${model.rows}
    </select>

    <select id="queryRoleCount" parameterType="com.mot.model.ParamRoleModel" resultType="java.lang.Integer">
        select count(1) from sy_role where delflag = '1'
        <if test="model.roleCode != null ">
            and role_code = #{model.roleCode}
        </if>
        <if test="model.roleName != null ">
            and role_name = #{model.roleName}
        </if>
        <if test="model.startTime != null ">
            and create_time >= #{model.startTime}
        </if>
        <if test="model.endTime != null ">
            and #{model.endTime} >= create_time
        </if>
    </select>

    <insert id="insertRole" parameterType="com.mot.entity.RoleEntity">
        INSERT INTO sy_role
            (
                role_code,
                role_name,
                description,
                create_time,
                create_user,
                update_time,
                update_user,
                delflag
            )
        VALUES
            (
                #{roleCode},
                #{roleName},
                #{description},
                #{createTime},
                #{createUser},
                #{updateTime},
                #{updateUser},
                #{delflag}
            )
    </insert>

    <insert id="batchInsertRoleResource" parameterType="java.util.List">
        INSERT INTO sy_role_resource
            (
                role_id,
                resource_id,
                create_time,
                create_user,
                update_time,
                update_user,
                delflag
            )
        VALUES
        <foreach collection="list" item="entity" separator=",">
            (
                #{entity.roleId},
                #{entity.resourceId},
                #{entity.createTime},
                #{entity.createUser},
                #{entity.updateTime},
                #{entity.updateUser},
                #{entity.delflag}
            )
        </foreach>
    </insert>

    <delete id="batchDeleteRoleResource" parameterType="java.util.List">
        delete from sy_role_resource where
        (role_id,resource_id) in (
        <foreach collection="list" item="entity" separator=",">
            (
            #{entity.roleId},
            #{entity.resourceId}
            )
        </foreach>
        )
    </delete>

    <select id="queryRoleByUserId" parameterType="com.mot.model.ParamUserModel" resultType="com.mot.entity.RoleEntity">
        select r.* from
          sy_role_user ru
        LEFT JOIN sy_role r ON r.id = ru.role_id
        WHERE  ru.delflag = '1' and r.delflag = '1' and
        ru.user_id = #{model.id}
    </select>
</mapper>